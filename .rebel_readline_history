1572578249940:(require 'mecca.music)
1572578260178:(in-ns 'mecca.music)
1572578278687:@(subscribe [:audio-context])
1572588058735:(require 'goog.object)
1572588102792:(def obj #js {:foo #js {:bar 2}})
1572588113633:(goog.object/get obj "foo")
1572588124780:(goog.object/getValueByKeys obj "foo" "bar")
1572588536683:(require 'mecca.music)
1572588543030:(in-ns 'mecca.music)
1572588564090:@(subscribe [:file-upload])
1572590438789:(def mymid @(subscribe [:file-upload]))
1572590443051:mymid
1572591100636:(let [reader (js/FileReader.)\n      file mymid]\n  (.readAsArrayBuffer reader file))
1572591165960:(let [reader (js/FileReader.)\n      file mymid]\n  (set! (.-onload reader) (-> reader .-result))\n  (.readAsArrayBuffer reader file))
1572591228955:(.readAsArrayBuffer mymid)
1572593376634:@(subscribe [:file-upload])
1572594035128:(require 'goog.crypt)
1572594126533:(goog.crypt/byteArrayToHex @(subscribe [:file-upload]))
1573625137923:(defn img->data [img] (let [canvas (.createElement js/document "canvas") ctx (.getContext canvas "2d") width (.-width img) height (.-height img)] (set! (.-width canvas) width) (set! (.-height canvas) height) (.drawImage ctx img 0 0) (.getImageData ctx 0 0 width height)))
1573625281083:(require 'mecca.view)
1573625292368:(in-ns 'mecca.view)
1573625302556:@(subscribe [:file-upload])
1573625358147:(img->data @(subscribe [:file-upload]))
1573625375164:(defn img->data [img] (let [canvas (.createElement js/document "canvas") ctx (.getContext canvas "2d") width (.-width img) height (.-height img)] (set! (.-width canvas) width) (set! (.-height canvas) height) (.drawImage ctx img 0 0) (.getImageData ctx 0 0 width height)))
1573625379452:(img->data @(subscribe [:file-upload]))
1573691170245:(require 'mecca.view)
1573691175627:(in-ns 'mecca.view)
1573691278665:(.getElementById js/document "myimg")
1573691324309:(.-width (.getElementById js/document "myimg"))
1573694070314:(make-image @(subscribe [:file-upload]) #(img->data %))
1573697995075:(require 'mecca.view)
1573697998930:(in-ns 'mecca.view)
1573698009629:@(subscribe [:img])
1573698129292:(.-width @(subscribe [:img]))
1573706311369:(require 'mecca.view)
1573706317185:(in-ns 'mecca.view)
1573706327444:@(subscribe [:img])
1573710446056:(require 'mecca.view)
1573710449758:(in-ns 'mecca.view)
1573710514988:(.getColors js/window @(subscribe [:img]))
1573710528287:@(subscribe [:img])
1573710557209:(.getColors @(subscribe [:img]))
1573710577702:(js/getColors @(subscribe [:img]))
1573710585246:@(subscribe [:img])
1573712139502:(.-data @(subscribe [:img]))
1573712228016:(.-data (img->data @(subscribe [:img])))
1573712239577:(img->data @(subscribe [:img]))
1573712323554:(get (img->data @(subscribe [:img])) 4)
1573712338456:(type (img->data @(subscribe [:img]))\n      )
1573712355484:(nth (img->data @(subscribe [:img])) 4)
1573716259323:(type (img->data @(subscribe [:img])))
1573716274684:(require 'mecca.view)
1573716290053:(in-ns 'mecca.view)
1573716299700:(type (img->data @(subscribe [:img])))
1573716859261:(js->clj (img->data @(subscribe [:img])))
1573716948660:(aget (img->data @(subscribe [:img])) 4)
1573722099415:(type (img->data @(subscribe [:img])))
1573722161828:(get-colors @(subscribe [:img]))
1573722562797:(require 'mecca.view)
1573722568015:(in-ns 'mecca.view)
1573722824063:(get-colors @(subscribe [:img]))
1573722949414:(def myimg @(subscribe [:img]))
1573722953830:myimg
1573722991232:(img->data myimg)
1573723273551:(def mydata (img->data myimg))\\
1573723296839:(.-length mydata)
1573725039420:(.-width mydata)
1573725047634:(.-width myimg)
1573725070836:(def w (.-width myimg))
1573725228408:(partition 4 mydata)
1573725356098:(require 'mecca.view)
1573725361390:(in-ns 'mecca.view)
1573725373413:(def myimg @(subscribe [:img]))
1573725387968:(def mydata (img->data myimg))
1573725413317:(type mydata)
1573725445723:(partition 4 (js->clj mydata))
1573756041168:(require 'mecca.view)
1573756140311:(in-ns 'mecca.view)
1573756240873:(def myimg @(subscribe [:img]))
1573756253766:myimg
1573756273150:(def mydata (img->data myimg))
1573756282025:(type mydata)
1573756325913:(def w (.-width myimg))
1573756328354:w
1573756393945:mydata
1573756407088:(js->clj mydata)
1573756421306:(type (js->clj mydata))
1573756630447:(.-length mydata)
1573756794038:(aget mydata 4)
1573756809007:(.-length mydata)
1573756823308:(type mydata)
1573756846803:(def mydata (img->data myimg))
1573756855449:(def myimg @(subscribe [:img]))
1573756858213:(def mydata (img->data myimg))
1573756863231:(type mydata)
1573756868215:(.-length mydata)
1573756873494:(aget mydata 4)
1573756887602:(aget mydata 527)
1573756975775:(get-colors myimg)
1573757049106:(def myimg @(subscribe [:img]))
1573757053370:(get-colors myimg)
1573758704313:(require 'mecca.view)
1573758715008:(in-ns 'mecca.view)
1573758726301:(def myimg @(subscribe [:img]))
1573758743909:(get-colors myimg)
1573759268624:(def myimg @(subscribe [:img]))
1573759271232:(get-colors myimg)
1573759301872:(nth (seq (get-colors myimg)) 5)
1573759449801:(def myimg @(subscribe [:img]))
1573759453092:(get-colors myimg)
1573759476963:(for [color (get-colors myimg)]\n                 [:p (str color)])
1573759617387:(for [color (get-colors myimg)]\n     color)
1573759733184:(def myimg @(subscribe [:img]))
1573759816043:(for [color (get-colors myimg)]\n     (str color))
1573759853759:(get-colors myimg)
1573759869863:(first (get-colors myimg))
1573759960003:(first (seq (get-colors myimg)))
1573760855455:(get-colors myimg)
1573760864545:(def myimg @(subscribe [:img]))
1573760866818:(get-colors myimg)
1573760993287:(nth (get-colors myimg) 0)
1573761191283:(require 'mecca.view)
1573761206346:(in-ns 'mecca.view)
1573770893979:(def myimg @(subscribe [:img]))
1573771145218:(type (get-colors myimg))
1573771158895:(count (get-colors myimg))
1573771494356:(for [color (get-colors myimg)]\n  color)
1573771887727:(doseq [[k v] (get-colors myimg)] (prn k v))\\
1573771894657:(doseq [[k v] (get-colors myimg)] (prn k v))
1573772139230:(for [[k v] (get-colors myimg)] [:p (str k v)])
1573773965396:(get-color [248 0 0 255])
1573773983389:(apply get-color [248 0 0 255])
1573781834784:(require 'mecca.view)
1573782080230:(in-ns 'mecca.view)
1573787666317:(make-path-data 0 0 1)
1573787924434:((fn [x y] (make-path-data x y 1)) [0 0])
1573787945581:((fn [[x y]] (make-path-data x y 1)) [0 0])
1573789991005:(require 'mecca.view)
1573790021566:(in-ns 'mecca.view)
1573790083033:(def myimg @(subscribe [:img]))
1573790190777:(for [[k v] (get-colors myimg)]\n  [k v])
1573790319305:(for [[k v] (get-colors myimg)]\n  [(apply get-color k) v])
1573790408990:(for [[k v] (get-colors myimg)]\n  [(apply get-color k) (apply str (map (fn [[x y]] (make-path-data x y 1)) (reverse v)))])
