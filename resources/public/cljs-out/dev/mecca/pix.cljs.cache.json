["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$document",["^ ","~$createElement",["^ "]],"~$Object",["^ ","~$getContext",["^ "],"~$width",["^ "],"~$height",["^ "],"~$drawImage",["^ "],"~$getImageData",["^ "],"~$data",["^ "]],"~$Math",["^ ","~$floor",["^ "],"~$abs",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mecca.pix","~:imports",null,"~:requires",["^ ","~$re-frame.core","^F"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$subscribe","^F"],"~:defs",["^ ","~$color-sort",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca-pix/src/mecca/pix.cljs","~:line",58,"~:column",7,"~:end-line",58,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^T",[["~$img"]]]]],"~:doc","Returns a sequence of an image's colors sorted by similarity to others"],"^B","~$mecca.pix/color-sort","~:variadic",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",17,"~:method-params",["^T",[["^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^P",1,"^O",58,"^Q",58,"~:max-fixed-arity",1,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Returns a sequence of an image's colors sorted by similarity to others"],"~$get-pixels",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",25,"^P",7,"^Q",25,"^R",17,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^B","~$mecca.pix/get-pixels","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",17,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",25,"^Q",25,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$edn->xml",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",88,"^P",7,"^Q",88,"^R",15,"^S",["^T",["^U",["^T",[["^7","^8","~$paths"]]]]],"^W","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs SVG in XML"],"^B","~$mecca.pix/edn->xml","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",15,"^Z",["^T",[["^7","^8","^16"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",88,"^Q",88,"^11",3,"^12",true,"^S",["^T",["^U",["^T",[["^7","^8","^16"]]]]],"^W","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs SVG in XML"],"~$compare-rgb",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",44,"^P",7,"^Q",44,"^R",18,"^S",["^T",["^U",["^T",[["~$color1","~$color2"]]]]],"^W","Takes 2 vectors of rgba values,\n   returns a score of how different they are.\n   Score of 0 means same color. 765 means black and white."],"^B","~$mecca.pix/compare-rgb","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",18,"^Z",["^T",[["^19","^1:"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",44,"^Q",44,"^11",2,"^12",true,"^S",["^T",["^U",["^T",[["^19","^1:"]]]]],"^W","Takes 2 vectors of rgba values,\n   returns a score of how different they are.\n   Score of 0 means same color. 765 means black and white."],"~$svg-data",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",112,"^P",7,"^Q",112,"^R",15,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^B","~$mecca.pix/svg-data","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",15,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",112,"^Q",112,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$make-path-data",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",109,"^P",7,"^Q",109,"^R",21,"^S",["^T",["^U",["^T",[["~$x","~$y","~$w"]]]]]],"^B","~$mecca.pix/make-path-data","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",21,"^Z",["^T",[["~$x","~$y","~$w"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",109,"^Q",109,"^11",3,"^12",true,"^S",["^T",["^U",["^T",[["~$x","~$y","~$w"]]]]]],"~$svg-paths",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",79,"^P",7,"^Q",79,"^R",16,"^S",["^T",["^U",["^T",[["^16"]]]]],"^W","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs a reagent hiccup element"],"^B","~$mecca.pix/svg-paths","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",16,"^Z",["^T",[["^16"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",79,"^Q",79,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^16"]]]]],"^W","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs a reagent hiccup element"],"~$component->hex",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",4,"^P",7,"^Q",4,"^R",21,"^S",["^T",["^U",["^T",[["~$c"]]]]]],"^B","~$mecca.pix/component->hex","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",21,"^Z",["^T",[["~$c"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",4,"^Q",4,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["~$c"]]]]]],"~$get-color",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",8,"^P",7,"^Q",8,"^R",16,"^S",["^T",["^U",["^T",[["~$r","~$g","~$b","~$a"]]]]]],"^B","~$mecca.pix/get-color","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",16,"^Z",["^T",[["~$r","~$g","~$b","~$a"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",8,"^Q",8,"^11",4,"^12",true,"^S",["^T",["^U",["^T",[["~$r","~$g","~$b","~$a"]]]]]],"~$img->data",["^ ","^L",null,"^M",["^ ","^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^O",12,"^P",7,"^Q",12,"^R",16,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Draws image onto HTML Canvas, returns a\n   Uint8ClampedArray of rgba values (0-255 inclusive)"],"^B","~$mecca.pix/img->data","^Y",false,"^N","/home/porky/mecca-pix/src/mecca/pix.cljs","^R",16,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^O",12,"^Q",12,"^11",1,"^12",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^W","Draws image onto HTML Canvas, returns a\n   Uint8ClampedArray of rgba values (0-255 inclusive)"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^A",["~:path","~:stroke","~:color","~:g","~:score","~:d"]],"~:order",["^1O","^1N","~:g","^1L","^1M","~:d"]],"^W",null]