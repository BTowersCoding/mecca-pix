["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$document",["^ ","~$createElement",["^ "]],"~$Object",["^ ","~$getContext",["^ "],"~$width",["^ "],"~$height",["^ "],"~$drawImage",["^ "],"~$getImageData",["^ "],"~$data",["^ "]],"~$Math",["^ ","~$floor",["^ "],"~$sqrt",["^ "],"~$pow",["^ "]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$mecca.pix","~:imports",null,"~:requires",["^ ","~$re-frame.core","^G"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$subscribe","^G"],"~:defs",["^ ","~$get-pixels",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/porky/mecca-pix/src/mecca/pix.cljs","~:line",33,"~:column",7,"~:end-line",33,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^U",[["~$img"]]]]],"~:doc","Takes an HTMLImageElement, returns a map of\n  the colors to their corresponding pixels"],"^C","~$mecca.pix/get-pixels","~:variadic",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",17,"~:method-params",["^U",[["^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^Q",1,"^P",33,"^R",33,"~:max-fixed-arity",1,"~:fn-var",true,"^T",["^U",["^V",["^U",[["^W"]]]]],"^X","Takes an HTMLImageElement, returns a map of\n  the colors to their corresponding pixels"],"~$edn->xml",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",100,"^Q",7,"^R",100,"^S",15,"^T",["^U",["^V",["^U",[["^7","^8","~$paths"]]]]],"^X","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs SVG in XML"],"^C","~$mecca.pix/edn->xml","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",15,"^[",["^U",[["^7","^8","^15"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",100,"^R",100,"^12",3,"^13",true,"^T",["^U",["^V",["^U",[["^7","^8","^15"]]]]],"^X","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs SVG in XML"],"~$compare-rgb",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",55,"^Q",7,"^R",55,"^S",18,"^T",["^U",["^V",["^U",[[["~$r1","~$g1","~$b1","~$_"],["~$r2","~$g2","~$b2","~$_"]]]]]],"^X","Quantifies euclidean distance in 3 dimensional color space"],"^C","~$mecca.pix/compare-rgb","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",18,"^[",["^U",[["~$p__27394","~$p__27395"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",55,"^R",55,"^12",2,"^13",true,"^T",["^U",["^V",["^U",[[["^18","^19","^1:","~$_"],["^1;","^1<","^1=","~$_"]]]]]],"^X","Quantifies euclidean distance in 3 dimensional color space"],"~$svg-data",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",123,"^Q",7,"^R",123,"^S",15,"^T",["^U",["^V",["^U",[["^W"]]]]]],"^C","~$mecca.pix/svg-data","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",15,"^[",["^U",[["^W"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",123,"^R",123,"^12",1,"^13",true,"^T",["^U",["^V",["^U",[["^W"]]]]]],"~$make-path-data",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",120,"^Q",7,"^R",120,"^S",21,"^T",["^U",["^V",["^U",[["~$x","~$y","~$w"]]]]]],"^C","~$mecca.pix/make-path-data","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",21,"^[",["^U",[["~$x","~$y","~$w"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",120,"^R",120,"^12",3,"^13",true,"^T",["^U",["^V",["^U",[["~$x","~$y","~$w"]]]]]],"~$rgba->hex",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",14,"^Q",7,"^R",14,"^S",16,"^T",["^U",["^V",["^U",[["~$r","~$g","~$b","~$a"]]]]],"^X","Returns proper hex color code. Ignores fully transparent colors."],"^C","~$mecca.pix/rgba->hex","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",16,"^[",["^U",[["~$r","~$g","~$b","~$a"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",14,"^R",14,"^12",4,"^13",true,"^T",["^U",["^V",["^U",[["~$r","~$g","~$b","~$a"]]]]],"^X","Returns proper hex color code. Ignores fully transparent colors."],"~$closest-neighbor",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",72,"^Q",7,"^R",72,"^S",23,"^T",["^U",["^V",["^U",[["~$color","~$colors"]]]]],"^X","Returns distance of nearest color to color in colors"],"^C","~$mecca.pix/closest-neighbor","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",23,"^[",["^U",[["^1H","^1I"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",72,"^R",72,"^12",2,"^13",true,"^T",["^U",["^V",["^U",[["^1H","^1I"]]]]],"^X","Returns distance of nearest color to color in colors"],"~$similar-colors",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",77,"^Q",7,"^R",77,"^S",21,"^T",["^U",["^V",["^U",[["^1I"]]]]],"^X","Takes a collection of rgba vectors,\n  sorts them by colors closest to each other"],"^C","~$mecca.pix/similar-colors","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",21,"^[",["^U",[["^1I"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",77,"^R",77,"^12",1,"^13",true,"^T",["^U",["^V",["^U",[["^1I"]]]]],"^X","Takes a collection of rgba vectors,\n  sorts them by colors closest to each other"],"~$svg-paths",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",91,"^Q",7,"^R",91,"^S",16,"^T",["^U",["^V",["^U",[["^15"]]]]],"^X","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs a reagent hiccup element"],"^C","~$mecca.pix/svg-paths","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",16,"^[",["^U",[["^15"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",91,"^R",91,"^12",1,"^13",true,"^T",["^U",["^V",["^U",[["^15"]]]]],"^X","Accepts SVG paths in the form [[color1 path1] [color2 path2] ...]\n   and outputs a reagent hiccup element"],"~$component->hex",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",4,"^Q",7,"^R",4,"^S",21,"^T",["^U",["^V",["^U",[["~$c"]]]]],"^X","Takes ASCII value 0-255, returns hex byte as string"],"^C","~$mecca.pix/component->hex","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",21,"^[",["^U",[["~$c"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",4,"^R",4,"^12",1,"^13",true,"^T",["^U",["^V",["^U",[["~$c"]]]]],"^X","Takes ASCII value 0-255, returns hex byte as string"],"~$img->data",["^ ","^M",null,"^N",["^ ","^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^P",20,"^Q",7,"^R",20,"^S",16,"^T",["^U",["^V",["^U",[["^W"]]]]],"^X","Draws image onto HTML Canvas, returns a\n   Uint8ClampedArray of rgba values (0-255 inclusive)"],"^C","~$mecca.pix/img->data","^Z",false,"^O","/home/porky/mecca-pix/src/mecca/pix.cljs","^S",16,"^[",["^U",[["^W"]]],"^10",null,"^11",["^U",[null,null]],"^Q",1,"^P",20,"^R",20,"^12",1,"^13",true,"^T",["^U",["^V",["^U",[["^W"]]]]],"^X","Draws image onto HTML Canvas, returns a\n   Uint8ClampedArray of rgba values (0-255 inclusive)"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^B",["~:path","~:stroke","~:g","~:d"]],"~:order",["~:g","^1W","^1X","~:d"]],"^X",null]